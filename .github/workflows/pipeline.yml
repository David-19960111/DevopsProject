name: Proyecto Basico Devops

on:
  push:
    branches:
      - developer

env:
  REGISTRY: anarkatomica1996
  IMAGE_NAME: basicproyectdevops

jobs:
  SECRET:
    runs-on: ubuntu-latest
    name: Secret-Scanner
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Secret Detection
        uses: zricethezav/gitleaks-action@master
        continue-on-error: true 

  init:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
        working-directory: my-app
      - run: npm test
        working-directory: my-app

  trivy-security:
    runs-on: ubuntu-latest
    needs: init
    continue-on-error: true
    permissions:
      contents: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Build an image from Dockerfile
        run: |
          docker build -f my-app/Dockerfile -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}'
          format: 'sarif'
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"
      - name: Upload Trivy Scan Results to Github Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
      
  build-docker:
    runs-on: ubuntu-latest
    needs: trivy-security
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:  
          file: ./my-app/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy_heroku:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.13.15 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "devops-project" #Must be unique in Heroku
          heroku_email: "david11011996@gmail.com"
          usedocker: true
    
  deploy_aws:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
    - uses: actions/checkout@v3
    - name: Generate deployment package
      run: zip -r deploy.zip . -x '*.git*'
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v22
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: MyApplicationName
        environment_name: MyApplication-Environment
        version_label: 12345
        region: us-west-2
        deployment_package: deploy.zip
      

  
  data_scan:
    runs-on: ubuntu-latest
    name: Scan the webapplication
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: master
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: 'https://www.zaproxy.org'

  